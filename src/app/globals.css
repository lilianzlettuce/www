@import "tailwindcss";

:root {
  /* Color variables */
  --white: #ffffff;
  --black: #000000;
  --gray-50: #f9fafb;
  --gray-100: #f3f4f6;
  --gray-200: #e5e7eb;
  --gray-300: #d1d5db;
  --gray-400: #9ca3af;
  --gray-500: #6b7280;
  --gray-600: #40454e;
  --gray-700: #272b30;
  --gray-800: #1e2127;
  --gray-900: #171717;
  --gray-950: #0a0a0a;
  --gray-light: #ededed;
  
  /* Blue colors */
  --blue-500: #3b82f6;
  --blue-600: #2563eb;
  
  /* Brown/Sepia colors */
  --brown-600: #8b4513;
  --brown-700: #5d3a1a;
  --brown-800: #2d1810;
  --brown-100: #f4e4d6;
  --brown-50: #f9f1e8;
  --brown-200: #e6d5c3;
  --brown-300: #8b6f47;
  --sepia-bg: #fdf8f3;
  --sepia-card: #faf5f0;
  
  /* High contrast colors */
  --yellow: #ffff00;
  --red: #ff0000;
  --green: #00ff00;
  --orange: #ff8800;
  --gray-dark: #333333;
  --gray-light-2: #cccccc;
  
  /* Status colors */
  --red-500: #ef4444;
  --red-600: #dc2626;
  --green-500: #10b981;
  --green-600: #059669;
  --yellow-500: #f59e0b;
  --yellow-600: #d97706;

  /* Theme variables will be set dynamically */
  --background: var(--white);
  --foreground: var(--gray-900);
  --primary: var(--black);
  --primaryForeground: var(--white);
  --secondary: var(--gray-100);
  --secondaryForeground: var(--gray-600);
  --muted: var(--gray-50);
  --mutedForeground: var(--gray-500);
  --accent: var(--gray-100);
  --accentForeground: var(--gray-600);
  --border: var(--gray-200);
  --input: var(--white);
  --ring: var(--blue-600);
  --card: var(--white);
  --cardForeground: var(--gray-900);
  --popover: var(--white);
  --popoverForeground: var(--gray-900);
  --destructive: var(--red-500);
  --destructiveForeground: var(--white);
  --success: var(--green-500);
  --successForeground: var(--white);
  --warning: var(--yellow-500);
  --warningForeground: var(--white);

  /* Theme filter variables */
  --invert: 0.05;

  --highlight-bg: var(--foreground);
  --highlight-fg: var(--background);

  /* Filter variables */
  filter: saturate(100%);
  filter: brightness(50%);
  filter: sepia(50%);
  filter: contrast(50%);
  filter: hue-rotate(45deg);
  filter: invert(var(--invert));

  overflow-x: hidden;
}

:root:has(.no-doc-scroll) {
  overflow: hidden;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: var(--font-sans), Arial, Helvetica, sans-serif;
}

::selection {
  background-color: var(--highlight-bg);
  color: var(--highlight-fg);
}

@theme {
  --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
              "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
              "Liberation Mono", "Courier New", monospace;

  --font-display: "Satoshi", "sans-serif";

  /* Local fonts */
  --font-satoshi: var(--font-satoshi);
  --font-uncut-sans: var(--font-uncut-sans);
  --font-psygen: var(--font-psygen);
  --font-murmure: var(--font-murmure);
  --font-code7x5: var(--font-code7x5);
  --font-bp-dots-square-bold: var(--font-bp-dots-square-bold);
  --font-unifont-ex-mono: var(--font-unifont-ex-mono);

  /* Google fonts */
  --font-inter: var(--font-inter);
  --font-noto-sans: var(--font-noto-sans);
  --font-open-sans: var(--font-open-sans);
  --font-roboto: var(--font-roboto);

  --font-roboto-mono: var(--font-roboto-mono);
  --font-dm-mono: var(--font-dm-mono);
  --font-ibm-plex-mono: var(--font-ibm-plex-mono);
  --font-jetbrains-mono: var(--font-jetbrains-mono);

  --font-silkscreen: var(--font-silkscreen);
  --font-tiny5: var(--font-tiny5);
  --font-micro5: var(--font-micro5);
  --font-archivo-black: var(--font-archivo-black);
  
  /* Color variables */
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primaryForeground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondaryForeground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--mutedForeground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accentForeground);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --color-card: var(--card);
  --color-card-foreground: var(--cardForeground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popoverForeground);
  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructiveForeground);
  --color-success: var(--success);
  --color-success-foreground: var(--successForeground);
  --color-warning: var(--warning);
  --color-warning-foreground: var(--warningForeground);
}

@layer base {

  input, textarea {
    outline: none;
    padding: 2px 4px;
    font-family: var(--font-overused-grotesk);
    border: 1px solid rgb(47, 47, 47);
    border-radius: 1px;
  }

  button {
    width: fit-content;
    border-radius: 1px;
    padding: 2px 8px;
    font-family: var(--font-overused-grotesk);
    cursor: pointer;
  }

  canvas {
    touch-action: none;
  }
}

@layer components {
  .navlink {
    font-family: var(--font-body);
    font-weight: 500;
    color: black;
    padding-top: 0;
    padding-bottom: 0;
  }
  
  .social-link {
    transition-property: color;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  .social-link:hover {
    color: rgb(147, 51, 234);
  }
  
  .hover-slide-line {
    position: relative;
    overflow: hidden;
  }
  .hover-slide-line::before {
    content: '';
    position: absolute;
    bottom: 0px;
    left: 0px;
    width: 100%;
    height: 2px;
    background-color: var(--foreground);
    transition-property: transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 200ms;
    transform: translateX(-101%);
  }
  .hover-slide-line:hover::before {
    transform: translateX(0);
  }
  
  .btn-base {
    background-color: black;
    color: white;
    font-size: 1rem;
    font-family: var(--font-body);
    font-weight: 600;
    min-width: fit-content;
    padding-left: 16px;
    padding-right: 16px;
    padding-top: 11px;
    padding-bottom: 11px;
    border-radius: 8px;
  }
  
  .btn-border {
    border-width: 2px;
    border-color: black;
    padding-top: 9px;
    padding-bottom: 9px;
    padding-left: 14px;
    padding-right: 14px;
  }
  
  .hover-slide-bg {
    position: relative;
    height: fit-content;
    color: white;
    background-color: black;
    border-width: 2px;
    border-color: black;
    overflow: hidden;
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 100ms;
  }
  .hover-slide-bg::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    aspect-ratio: 1;
    background-color: white;
    transition-property: transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 200ms;
    transform: translateX(0);
  }
  .hover-slide-bg:hover::before {
    transform: translateX(100%);
  }
  
  .hover-reveal-icon {
    overflow: hidden;
  }
  .hover-reveal-icon::after {
    overflow: hidden;
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 100ms;
    content: "â†’";
    display: inline-block;
    padding-left: 0.5rem;
    transform: scaleX(0);
    transform-origin: left;
  }
  .hover-reveal-icon:hover::after {
    transform: scaleX(100%);
  }
}


.goose-sprite {
  --sprite-size: 32px;
  image-rendering: pixelated;
  width: var(--sprite-size);
  height: var(--sprite-size);
  background-image: url('/img/sprite/goose-walk2.png');
  animation: idle 1s steps(4) infinite;
}

.goose-sprite:hover {
  animation: hover 0.2s steps(2) infinite;
}

@keyframes idle {
  from { background-position: 0px 0px; }
  to   { background-position: -128px 0px; }
}

@keyframes hover {
  from { background-position: 0px 0px; }
  to   { background-position: -64px 0px; }
}
